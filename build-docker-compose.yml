version: '2'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 2181:2181
  kafka:
    image: confluentinc/cp-kafka:7.4.3
    container_name: my-kafka
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://my-kafka:29092,PLAINTEXT_HOST://my-kafka:9092
      # KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      # KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  admintask:
    depends_on: 
      - kafka
    image: adoptopenjdk/maven-openjdk11:latest
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    command: mvn spring-boot:run
    ports:
      - 8082:8080
    working_dir: /usr/src
    volumes:
      - ./admintask:/usr/src
      - ./maven-repo:/root/.m2
      
  monthlysubscriptionmanagement:
    depends_on: 
      - kafka
    image: adoptopenjdk/maven-openjdk11:latest
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    command: mvn spring-boot:run
    ports:
      - 8083:8080
    working_dir: /usr/src
    volumes:
      - ./monthlysubscriptionmanagement:/usr/src
      - ./maven-repo:/root/.m2
      
  userinfomanagement:
    depends_on: 
      - kafka
    image: adoptopenjdk/maven-openjdk11:latest
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    command: mvn spring-boot:run
    ports:
      - 8084:8080
    working_dir: /usr/src
    volumes:
      - ./userinfomanagement:/usr/src
      - ./maven-repo:/root/.m2
      
  authidentity:
    depends_on: 
      - kafka
    image: adoptopenjdk/maven-openjdk11:latest
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    command: mvn spring-boot:run
    ports:
      - 8085:8080
    working_dir: /usr/src
    volumes:
      - ./authidentity:/usr/src
      - ./maven-repo:/root/.m2
      
  pointmanagement:
    depends_on: 
      - kafka
    image: adoptopenjdk/maven-openjdk11:latest
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    command: mvn spring-boot:run
    ports:
      - 8086:8080
    working_dir: /usr/src
    volumes:
      - ./pointmanagement:/usr/src
      - ./maven-repo:/root/.m2
      
  scriptmanagement:
    depends_on: 
      - kafka
    image: adoptopenjdk/maven-openjdk11:latest
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    command: mvn spring-boot:run
    ports:
      - 8087:8080
    working_dir: /usr/src
    volumes:
      - ./scriptmanagement:/usr/src
      - ./maven-repo:/root/.m2
      
  userhistorymanagement:
    depends_on: 
      - kafka
    image: adoptopenjdk/maven-openjdk11:latest
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    command: mvn spring-boot:run
    ports:
      - 8088:8080
    working_dir: /usr/src
    volumes:
      - ./userhistorymanagement:/usr/src
      - ./maven-repo:/root/.m2
      
  aiservice:
    depends_on: 
      - kafka
    image: adoptopenjdk/maven-openjdk11:latest
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    command: mvn spring-boot:run
    ports:
      - 8089:8080
    working_dir: /usr/src
    volumes:
      - ./aiservice:/usr/src
      - ./maven-repo:/root/.m2
      
  booksmanagement:
    depends_on: 
      - kafka
    image: adoptopenjdk/maven-openjdk11:latest
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    command: mvn spring-boot:run
    ports:
      - 8090:8080
    working_dir: /usr/src
    volumes:
      - ./booksmanagement:/usr/src
      - ./maven-repo:/root/.m2
      
  booksubstriptionmanagement:
    depends_on: 
      - kafka
    image: adoptopenjdk/maven-openjdk11:latest
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    command: mvn spring-boot:run
    ports:
      - 8091:8080
    working_dir: /usr/src
    volumes:
      - ./booksubstriptionmanagement:/usr/src
      - ./maven-repo:/root/.m2
      
  gateway:
    depends_on: 
      - kafka
      - admintask
      - monthlysubscriptionmanagement
      - userinfomanagement
      - authidentity
      - pointmanagement
      - scriptmanagement
      - userhistorymanagement
      - aiservice
      - booksmanagement
      - booksubstriptionmanagement
    image: adoptopenjdk/maven-openjdk11:latest
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    command: mvn spring-boot:run
    ports:
      - 8080:8080
    working_dir: /usr/src
    volumes:
      - ./gateway:/usr/src
      - ./maven-repo:/root/.m2