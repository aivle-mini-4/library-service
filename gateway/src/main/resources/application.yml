server:
  port: 8092

# JWT 설정
jwt:
  secret: aivleSecretKeyForJWTTokenGeneration2024WithMoreThan256BitsToMeetSecurityRequirements

# 보안 경로 설정 (선택사항 - 기본값 사용 시 생략 가능)
security:
  protected-paths:
    - "/authorapprovals"
    - "/pointpolicies"
    - "/pointPolicyViews"
    - "/subscribes"
    - "/subscribeViews"
    - "/writerProfiles"
    - "/memberProfiles"
    - "/adminProfiles"
    - "/writerPages"
    - "/adminPages"
    - "/userPages"
    - "/points"
    - "/pointViews"
    - "/manuscripts"
    - "/manuscriptPages"
    - "/viewHistories"
    - "/favorites"
    - "/queryViewHistories"
    - "/queryFavoriteLists"
    - "/aiServices"
    - "/books"
    - "/registeredBestsellerViews"
    - "/registeredBookViews"
    - "/bookSubscriptions"
logging:
  level:
#     org.hibernate.type: trace
#     org.springframework.cloud: debug
    root: ERROR
    aivle: INFO
    org.springframework.cloud: ERROR
    org.hibernate: ERROR
    org.springframework.boot: ERROR
    org.springframework.web: ERROR
---

spring:
  profiles: default
  cloud:
    gateway:
#<<< API Gateway / Routes
      routes:
        - id: admintask
          uri: http://localhost:8082
          predicates:
            - Path=/authorapprovals/**, /pointpolicies/**, /pointPolicyViews/**
        - id: monthlysubscriptionmanagement
          uri: http://localhost:8083
          predicates:
            - Path=/subscribes/**, /subscribeViews/**
        - id: userinfomanagement
          uri: http://localhost:8084
          predicates:
            - Path=/writerProfiles/**, /memberProfiles/**, /adminProfiles/**, /writerPages/**, /adminPages/**, /userPages/**
        - id: authidentity
          uri: http://localhost:8085
          predicates:
            - Path=/userAccounts/**, /authorAccounts/**, /adminAccounts/**, /auth/**
        - id: pointmanagement
          uri: http://localhost:8086
          predicates:
            - Path=/points/**, /pointViews/**
        - id: scriptmanagement
          uri: http://localhost:8087
          predicates:
            - Path=/manuscripts/**, /manuscriptPages/**
        - id: userhistorymanagement
          uri: http://localhost:8088
          predicates:
            - Path=/viewHistories/**, /favorites/**, /queryViewHistories/**, /queryFavoriteLists/**
        - id: aiservice
          uri: http://localhost:8089
          predicates:
            - Path=/aiServices/**, 
        - id: booksmanagement
          uri: http://localhost:8090
          predicates:
            - Path=/books/**, /registeredBestsellerViews/**, /registeredBookViews/**
        - id: booksubstriptionmanagement
          uri: http://localhost:8091
          predicates:
            - Path=/bookSubscriptions/**, 
        - id: frontend
          uri: http://localhost:8080
          predicates:
            - Path=/**
#>>> API Gateway / Routes
      default-filters:
        - LoggingFilter  # 모든 요청 로깅
        - JwtAuthenticationFilter  # 모든 라우트에 기본 적용
      globalcors:
        corsConfigurations:
          '[/**]':
            allowedOrigins:
              - "*"
            allowedMethods:
              - "*"
            allowedHeaders:
              - "*"
            allowCredentials: true


---

spring:
  profiles: docker
  cloud:
    gateway:
      default-filters:
        - LoggingFilter  # 모든 요청 로깅
        - JwtAuthenticationFilter  # 모든 라우트에 기본 적용
      routes:
        - id: admintask
          uri: http://admintask:8080
          predicates:
            - Path=/authorapprovals/**, /pointpolicies/**, 
        - id: monthlysubscriptionmanagement
          uri: http://monthlysubscriptionmanagement:8080
          predicates:
            - Path=/subscribes/**, 
        - id: userinfomanagement
          uri: http://userinfomanagement:8080
          predicates:
            - Path=/writerProfiles/**, /memberProfiles/**, /adminProfiles/**, 
        - id: authidentity
          uri: http://authidentity:8080
          predicates:
            - Path=/userAccounts/**, /authorAccounts/**, /adminAccounts/**, /auth/**
        - id: pointmanagement
          uri: http://pointmanagement:8080
          predicates:
            - Path=/points/**, 
        - id: scriptmanagement
          uri: http://scriptmanagement:8080
          predicates:
            - Path=/manuscripts/**, 
        - id: userhistorymanagement
          uri: http://userhistorymanagement:8080
          predicates:
            - Path=/viewHistories/**, /favorites/**, 
        - id: aiservice
          uri: http://aiservice:8080
          predicates:
            - Path=/aiServices/**, 
        - id: booksmanagement
          uri: http://booksmanagement:8080
          predicates:
            - Path=/books/**, 
        - id: booksubstriptionmanagement
          uri: http://booksubstriptionmanagement:8080
          predicates:
            - Path=/bookSubscriptions/**, 
        - id: frontend
          uri: http://frontend:8080
          predicates:
            - Path=/**
      globalcors:
        corsConfigurations:
          '[/**]':
            allowedOrigins:
              - "*"
            allowedMethods:
              - "*"
            allowedHeaders:
              - "*"
            allowCredentials: true

server:
  port: 8080
